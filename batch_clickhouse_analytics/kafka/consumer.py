import os
import time
import json
from clickhouse_driver import Client as CHClient
from confluent_kafka import Consumer, KafkaError, KafkaException

KAFKA_BOOTSTRAP_SERVERS = os.getenv('KAFKA_BOOTSTRAP_SERVERS', 'localhost:9092')
CLICKHOUSE_HOST = os.getenv('CLICKHOUSE_HOST', 'clickhouse')
CLICKHOUSE_PORT = int(os.getenv('CLICKHOUSE_PORT', '9000'))
CLICKHOUSE_DB = os.getenv('CLICKHOUSE_DB', 'default')
CLICKHOUSE_USER = os.getenv('CLICKHOUSE_USER', 'default')
CLICKHOUSE_PASSWORD = os.getenv('CLICKHOUSE_PASSWORD', '')

ch_client = CHClient(
    host=CLICKHOUSE_HOST,
    port=CLICKHOUSE_PORT,
    database=CLICKHOUSE_DB,
    user=CLICKHOUSE_USER,
    password=CLICKHOUSE_PASSWORD
)

print("=== CONSUMER STARTED ===")
print(f"ClickHouse host: {CLICKHOUSE_HOST}:{CLICKHOUSE_PORT}")
print(f"Kafka bootstrap servers: {KAFKA_BOOTSTRAP_SERVERS}")

def run_consumer(topic_name='purchases'):
    conf = {
        'bootstrap.servers': KAFKA_BOOTSTRAP_SERVERS,
        'group.id': 'clickhouse-consumer-group',
        'auto.offset.reset': 'earliest'
    }

    consumer = Consumer(conf)
    consumer.subscribe([topic_name])
    print(f"–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Ç–æ–ø–∏–∫: {topic_name}")

    try:
        while True:
            msg = consumer.poll(timeout=1.0)
            if msg is None:
                continue

            if msg.error():
                if msg.error().code() == KafkaError._PARTITION_EOF:
                    print(f"–ö–æ–Ω–µ—Ü –ø–∞—Ä—Ç–∏—Ü–∏–∏ {msg.topic()} [{msg.partition()}] –Ω–∞ offset {msg.offset()}")
                else:
                    print(f"Kafka –æ—à–∏–±–∫–∞: {msg.error()}")
                    raise KafkaException(msg.error())
                continue

            try:
                value_str = msg.value().decode('utf-8')
                print("–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:", value_str)
                record = json.loads(value_str)
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
                continue

            try:
                sell_id = record['sell_id']
                customer_id = record['customer_id']
                product_id = record['product_id']
                seller_id = record['seller_id']
                quantity = record['quantity']
                print("–î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏:", sell_id, customer_id, product_id, seller_id, quantity)
            except KeyError as e:
                print(f"–ü—Ä–æ–ø—É—â–µ–Ω–æ –ø–æ–ª–µ –≤ –¥–∞–Ω–Ω—ã—Ö: {e}")
                continue

            try:
                ch_client.execute("""
                    INSERT INTO fact_sales (sale_id, customer_id, product_id, seller_id, quantity)
                    VALUES
                """, [(sell_id, customer_id, product_id, seller_id, quantity)])
                print("‚úÖ –í—Å—Ç–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ ClickHouse")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Å—Ç–∞–≤–∫–µ –≤ ClickHouse: {e}")

    except KeyboardInterrupt:
        print("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Å—é–º–µ—Ä–∞ –≤—Ä—É—á–Ω—É—é")
    finally:
        consumer.close()
        print("üîö –ö–æ–Ω—Å—å—é–º–µ—Ä –∑–∞–∫—Ä—ã—Ç")

if __name__ == "__main__":
    time.sleep(3)  # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –Ω–∞ —Å—Ç–∞—Ä—Ç–µ
    run_consumer()
